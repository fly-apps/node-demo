<% if (options.postgres) { -%>
  if (postgres.client) {
    // get current count (may return zero rows)
    let result = await postgres.client.query('SELECT "count" from "welcome"');

    // increment count, creating table row if necessary
    if (!result.rows.length) {
      count = 1;
      await postgres.client?.query('INSERT INTO "welcome" VALUES($1)', [count]);
    } else {
      count = result.rows[0].count + 1;
      await postgres.client?.query('UPDATE "welcome" SET "count" = $1', [count]);
    }
  }
<% } else if (options.sqlite3) { -%>
  // increment count, creating table row if necessary
  await new Promise<% if (options.typescript) { %><void><% } %>((resolve, reject) => {
<% if (options.typescript) { -%>
  interface Welcome {
    count: number
  };
  
<% } -%>
    db.get('SELECT "count" from "welcome"', (err, row<% if (options.typescript) { %>: Welcome | null<% } %>) => {
      let query = 'UPDATE "welcome" SET "count" = ?';

      if (err) {
        reject(err);
        return
      } else if (row) {
        count = row.count + 1;
      } else {
        count = 1;
        query = 'INSERT INTO "welcome" VALUES(?)'
      }

      db.run(query, [count], err => {
        err ? reject(err) : resolve()
      })
    })
  });
<% } else { -%>
  // increment counter in counter.txt file
  try {
    count = parseInt(fs.readFileSync('counter.txt', 'utf-8')) + 1;
  } catch {
    count = 1;
  }

  fs.writeFileSync('counter.txt', count.toString());
<% } -%>